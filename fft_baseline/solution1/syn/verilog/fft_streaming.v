// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fft_streaming_fft_streaming,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=7280,HLS_SYN_TPT=2051,HLS_SYN_MEM=98,HLS_SYN_DSP=0,HLS_SYN_FF=22126,HLS_SYN_LUT=19716,HLS_VERSION=2022_2}" *)

module fft_streaming (
        ap_clk,
        ap_rst,
        X_R_address0,
        X_R_ce0,
        X_R_d0,
        X_R_q0,
        X_R_we0,
        X_R_address1,
        X_R_ce1,
        X_R_d1,
        X_R_q1,
        X_R_we1,
        X_I_address0,
        X_I_ce0,
        X_I_d0,
        X_I_q0,
        X_I_we0,
        X_I_address1,
        X_I_ce1,
        X_I_d1,
        X_I_q1,
        X_I_we1,
        OUT_R_address0,
        OUT_R_ce0,
        OUT_R_d0,
        OUT_R_q0,
        OUT_R_we0,
        OUT_R_address1,
        OUT_R_ce1,
        OUT_R_d1,
        OUT_R_q1,
        OUT_R_we1,
        OUT_I_address0,
        OUT_I_ce0,
        OUT_I_d0,
        OUT_I_q0,
        OUT_I_we0,
        OUT_I_address1,
        OUT_I_ce1,
        OUT_I_d1,
        OUT_I_q1,
        OUT_I_we1,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


input   ap_clk;
input   ap_rst;
output  [9:0] X_R_address0;
output   X_R_ce0;
output  [31:0] X_R_d0;
input  [31:0] X_R_q0;
output   X_R_we0;
output  [9:0] X_R_address1;
output   X_R_ce1;
output  [31:0] X_R_d1;
input  [31:0] X_R_q1;
output   X_R_we1;
output  [9:0] X_I_address0;
output   X_I_ce0;
output  [31:0] X_I_d0;
input  [31:0] X_I_q0;
output   X_I_we0;
output  [9:0] X_I_address1;
output   X_I_ce1;
output  [31:0] X_I_d1;
input  [31:0] X_I_q1;
output   X_I_we1;
output  [9:0] OUT_R_address0;
output   OUT_R_ce0;
output  [31:0] OUT_R_d0;
input  [31:0] OUT_R_q0;
output   OUT_R_we0;
output  [9:0] OUT_R_address1;
output   OUT_R_ce1;
output  [31:0] OUT_R_d1;
input  [31:0] OUT_R_q1;
output   OUT_R_we1;
output  [9:0] OUT_I_address0;
output   OUT_I_ce0;
output  [31:0] OUT_I_d0;
input  [31:0] OUT_I_q0;
output   OUT_I_we0;
output  [9:0] OUT_I_address1;
output   OUT_I_ce1;
output  [31:0] OUT_I_d1;
input  [31:0] OUT_I_q1;
output   OUT_I_we1;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire   [31:0] Stage_R_i_q0;
wire   [31:0] Stage_R_i_q1;
wire   [31:0] Stage_R_t_q0;
wire   [31:0] Stage_R_t_q1;
wire   [31:0] Stage_R_1_i_q0;
wire   [31:0] Stage_R_1_i_q1;
wire   [31:0] Stage_R_1_t_q0;
wire   [31:0] Stage_R_1_t_q1;
wire   [31:0] Stage_R_2_i_q0;
wire   [31:0] Stage_R_2_i_q1;
wire   [31:0] Stage_R_2_t_q0;
wire   [31:0] Stage_R_2_t_q1;
wire   [31:0] Stage_R_3_i_q0;
wire   [31:0] Stage_R_3_i_q1;
wire   [31:0] Stage_R_3_t_q0;
wire   [31:0] Stage_R_3_t_q1;
wire   [31:0] Stage_R_4_i_q0;
wire   [31:0] Stage_R_4_i_q1;
wire   [31:0] Stage_R_4_t_q0;
wire   [31:0] Stage_R_4_t_q1;
wire   [31:0] Stage_R_5_i_q0;
wire   [31:0] Stage_R_5_i_q1;
wire   [31:0] Stage_R_5_t_q0;
wire   [31:0] Stage_R_5_t_q1;
wire   [31:0] Stage_R_6_i_q0;
wire   [31:0] Stage_R_6_i_q1;
wire   [31:0] Stage_R_6_t_q0;
wire   [31:0] Stage_R_6_t_q1;
wire   [31:0] Stage_R_7_i_q0;
wire   [31:0] Stage_R_7_i_q1;
wire   [31:0] Stage_R_7_t_q0;
wire   [31:0] Stage_R_7_t_q1;
wire   [31:0] Stage_R_8_i_q0;
wire   [31:0] Stage_R_8_i_q1;
wire   [31:0] Stage_R_8_t_q0;
wire   [31:0] Stage_R_8_t_q1;
wire   [31:0] Stage_R_9_i_q0;
wire   [31:0] Stage_R_9_i_q1;
wire   [31:0] Stage_R_9_t_q0;
wire   [31:0] Stage_R_9_t_q1;
wire   [31:0] Stage_I_i_q0;
wire   [31:0] Stage_I_i_q1;
wire   [31:0] Stage_I_t_q0;
wire   [31:0] Stage_I_t_q1;
wire   [31:0] Stage_I_1_i_q0;
wire   [31:0] Stage_I_1_i_q1;
wire   [31:0] Stage_I_1_t_q0;
wire   [31:0] Stage_I_1_t_q1;
wire   [31:0] Stage_I_2_i_q0;
wire   [31:0] Stage_I_2_i_q1;
wire   [31:0] Stage_I_2_t_q0;
wire   [31:0] Stage_I_2_t_q1;
wire   [31:0] Stage_I_3_i_q0;
wire   [31:0] Stage_I_3_i_q1;
wire   [31:0] Stage_I_3_t_q0;
wire   [31:0] Stage_I_3_t_q1;
wire   [31:0] Stage_I_4_i_q0;
wire   [31:0] Stage_I_4_i_q1;
wire   [31:0] Stage_I_4_t_q0;
wire   [31:0] Stage_I_4_t_q1;
wire   [31:0] Stage_I_5_i_q0;
wire   [31:0] Stage_I_5_i_q1;
wire   [31:0] Stage_I_5_t_q0;
wire   [31:0] Stage_I_5_t_q1;
wire   [31:0] Stage_I_6_i_q0;
wire   [31:0] Stage_I_6_i_q1;
wire   [31:0] Stage_I_6_t_q0;
wire   [31:0] Stage_I_6_t_q1;
wire   [31:0] Stage_I_7_i_q0;
wire   [31:0] Stage_I_7_i_q1;
wire   [31:0] Stage_I_7_t_q0;
wire   [31:0] Stage_I_7_t_q1;
wire   [31:0] Stage_I_8_i_q0;
wire   [31:0] Stage_I_8_i_q1;
wire   [31:0] Stage_I_8_t_q0;
wire   [31:0] Stage_I_8_t_q1;
wire   [31:0] Stage_I_9_i_q0;
wire   [31:0] Stage_I_9_i_q1;
wire   [31:0] Stage_I_9_t_q0;
wire   [31:0] Stage_I_9_t_q1;
wire    bit_reverse_U0_ap_start;
wire    bit_reverse_U0_ap_done;
wire    bit_reverse_U0_ap_continue;
wire    bit_reverse_U0_ap_idle;
wire    bit_reverse_U0_ap_ready;
wire   [9:0] bit_reverse_U0_X_R_address0;
wire    bit_reverse_U0_X_R_ce0;
wire   [9:0] bit_reverse_U0_X_R_address1;
wire    bit_reverse_U0_X_R_ce1;
wire   [9:0] bit_reverse_U0_X_I_address0;
wire    bit_reverse_U0_X_I_ce0;
wire   [9:0] bit_reverse_U0_X_I_address1;
wire    bit_reverse_U0_X_I_ce1;
wire   [9:0] bit_reverse_U0_OUT_R_address0;
wire    bit_reverse_U0_OUT_R_ce0;
wire    bit_reverse_U0_OUT_R_we0;
wire   [31:0] bit_reverse_U0_OUT_R_d0;
wire   [9:0] bit_reverse_U0_OUT_I_address0;
wire    bit_reverse_U0_OUT_I_ce0;
wire    bit_reverse_U0_OUT_I_we0;
wire   [31:0] bit_reverse_U0_OUT_I_d0;
wire    ap_channel_done_Stage_I;
wire    bit_reverse_U0_OUT_I_full_n;
reg    ap_sync_reg_channel_write_Stage_I;
wire    ap_sync_channel_write_Stage_I;
wire    ap_channel_done_Stage_R;
wire    bit_reverse_U0_OUT_R_full_n;
reg    ap_sync_reg_channel_write_Stage_R;
wire    ap_sync_channel_write_Stage_R;
wire    fft_stage_U0_ap_start;
wire    fft_stage_U0_ap_done;
wire    fft_stage_U0_ap_continue;
wire    fft_stage_U0_ap_idle;
wire    fft_stage_U0_ap_ready;
wire   [9:0] fft_stage_U0_X_R_address0;
wire    fft_stage_U0_X_R_ce0;
wire   [9:0] fft_stage_U0_X_R_address1;
wire    fft_stage_U0_X_R_ce1;
wire   [9:0] fft_stage_U0_X_I_address0;
wire    fft_stage_U0_X_I_ce0;
wire   [9:0] fft_stage_U0_X_I_address1;
wire    fft_stage_U0_X_I_ce1;
wire   [9:0] fft_stage_U0_Out_R_address0;
wire    fft_stage_U0_Out_R_ce0;
wire    fft_stage_U0_Out_R_we0;
wire   [31:0] fft_stage_U0_Out_R_d0;
wire   [9:0] fft_stage_U0_Out_R_address1;
wire    fft_stage_U0_Out_R_ce1;
wire    fft_stage_U0_Out_R_we1;
wire   [31:0] fft_stage_U0_Out_R_d1;
wire   [9:0] fft_stage_U0_Out_I_address0;
wire    fft_stage_U0_Out_I_ce0;
wire    fft_stage_U0_Out_I_we0;
wire   [31:0] fft_stage_U0_Out_I_d0;
wire   [9:0] fft_stage_U0_Out_I_address1;
wire    fft_stage_U0_Out_I_ce1;
wire    fft_stage_U0_Out_I_we1;
wire   [31:0] fft_stage_U0_Out_I_d1;
wire    ap_channel_done_Stage_I_1;
wire    fft_stage_U0_Out_I_full_n;
reg    ap_sync_reg_channel_write_Stage_I_1;
wire    ap_sync_channel_write_Stage_I_1;
wire    ap_channel_done_Stage_R_1;
wire    fft_stage_U0_Out_R_full_n;
reg    ap_sync_reg_channel_write_Stage_R_1;
wire    ap_sync_channel_write_Stage_R_1;
wire    fft_stage_1_U0_ap_start;
wire    fft_stage_1_U0_ap_done;
wire    fft_stage_1_U0_ap_continue;
wire    fft_stage_1_U0_ap_idle;
wire    fft_stage_1_U0_ap_ready;
wire   [9:0] fft_stage_1_U0_X_R_address0;
wire    fft_stage_1_U0_X_R_ce0;
wire   [9:0] fft_stage_1_U0_X_R_address1;
wire    fft_stage_1_U0_X_R_ce1;
wire   [9:0] fft_stage_1_U0_X_I_address0;
wire    fft_stage_1_U0_X_I_ce0;
wire   [9:0] fft_stage_1_U0_X_I_address1;
wire    fft_stage_1_U0_X_I_ce1;
wire   [9:0] fft_stage_1_U0_Out_R_address0;
wire    fft_stage_1_U0_Out_R_ce0;
wire    fft_stage_1_U0_Out_R_we0;
wire   [31:0] fft_stage_1_U0_Out_R_d0;
wire   [9:0] fft_stage_1_U0_Out_R_address1;
wire    fft_stage_1_U0_Out_R_ce1;
wire    fft_stage_1_U0_Out_R_we1;
wire   [31:0] fft_stage_1_U0_Out_R_d1;
wire   [9:0] fft_stage_1_U0_Out_I_address0;
wire    fft_stage_1_U0_Out_I_ce0;
wire    fft_stage_1_U0_Out_I_we0;
wire   [31:0] fft_stage_1_U0_Out_I_d0;
wire   [9:0] fft_stage_1_U0_Out_I_address1;
wire    fft_stage_1_U0_Out_I_ce1;
wire    fft_stage_1_U0_Out_I_we1;
wire   [31:0] fft_stage_1_U0_Out_I_d1;
wire    ap_channel_done_Stage_I_2;
wire    fft_stage_1_U0_Out_I_full_n;
reg    ap_sync_reg_channel_write_Stage_I_2;
wire    ap_sync_channel_write_Stage_I_2;
wire    ap_channel_done_Stage_R_2;
wire    fft_stage_1_U0_Out_R_full_n;
reg    ap_sync_reg_channel_write_Stage_R_2;
wire    ap_sync_channel_write_Stage_R_2;
wire    fft_stage_2_U0_ap_start;
wire    fft_stage_2_U0_ap_done;
wire    fft_stage_2_U0_ap_continue;
wire    fft_stage_2_U0_ap_idle;
wire    fft_stage_2_U0_ap_ready;
wire   [9:0] fft_stage_2_U0_X_R_address0;
wire    fft_stage_2_U0_X_R_ce0;
wire   [9:0] fft_stage_2_U0_X_R_address1;
wire    fft_stage_2_U0_X_R_ce1;
wire   [9:0] fft_stage_2_U0_X_I_address0;
wire    fft_stage_2_U0_X_I_ce0;
wire   [9:0] fft_stage_2_U0_X_I_address1;
wire    fft_stage_2_U0_X_I_ce1;
wire   [9:0] fft_stage_2_U0_Out_R_address0;
wire    fft_stage_2_U0_Out_R_ce0;
wire    fft_stage_2_U0_Out_R_we0;
wire   [31:0] fft_stage_2_U0_Out_R_d0;
wire   [9:0] fft_stage_2_U0_Out_R_address1;
wire    fft_stage_2_U0_Out_R_ce1;
wire    fft_stage_2_U0_Out_R_we1;
wire   [31:0] fft_stage_2_U0_Out_R_d1;
wire   [9:0] fft_stage_2_U0_Out_I_address0;
wire    fft_stage_2_U0_Out_I_ce0;
wire    fft_stage_2_U0_Out_I_we0;
wire   [31:0] fft_stage_2_U0_Out_I_d0;
wire   [9:0] fft_stage_2_U0_Out_I_address1;
wire    fft_stage_2_U0_Out_I_ce1;
wire    fft_stage_2_U0_Out_I_we1;
wire   [31:0] fft_stage_2_U0_Out_I_d1;
wire    ap_channel_done_Stage_I_3;
wire    fft_stage_2_U0_Out_I_full_n;
reg    ap_sync_reg_channel_write_Stage_I_3;
wire    ap_sync_channel_write_Stage_I_3;
wire    ap_channel_done_Stage_R_3;
wire    fft_stage_2_U0_Out_R_full_n;
reg    ap_sync_reg_channel_write_Stage_R_3;
wire    ap_sync_channel_write_Stage_R_3;
wire    fft_stage_3_U0_ap_start;
wire    fft_stage_3_U0_ap_done;
wire    fft_stage_3_U0_ap_continue;
wire    fft_stage_3_U0_ap_idle;
wire    fft_stage_3_U0_ap_ready;
wire   [9:0] fft_stage_3_U0_X_R_address0;
wire    fft_stage_3_U0_X_R_ce0;
wire   [9:0] fft_stage_3_U0_X_R_address1;
wire    fft_stage_3_U0_X_R_ce1;
wire   [9:0] fft_stage_3_U0_X_I_address0;
wire    fft_stage_3_U0_X_I_ce0;
wire   [9:0] fft_stage_3_U0_X_I_address1;
wire    fft_stage_3_U0_X_I_ce1;
wire   [9:0] fft_stage_3_U0_Out_R_address0;
wire    fft_stage_3_U0_Out_R_ce0;
wire    fft_stage_3_U0_Out_R_we0;
wire   [31:0] fft_stage_3_U0_Out_R_d0;
wire   [9:0] fft_stage_3_U0_Out_R_address1;
wire    fft_stage_3_U0_Out_R_ce1;
wire    fft_stage_3_U0_Out_R_we1;
wire   [31:0] fft_stage_3_U0_Out_R_d1;
wire   [9:0] fft_stage_3_U0_Out_I_address0;
wire    fft_stage_3_U0_Out_I_ce0;
wire    fft_stage_3_U0_Out_I_we0;
wire   [31:0] fft_stage_3_U0_Out_I_d0;
wire   [9:0] fft_stage_3_U0_Out_I_address1;
wire    fft_stage_3_U0_Out_I_ce1;
wire    fft_stage_3_U0_Out_I_we1;
wire   [31:0] fft_stage_3_U0_Out_I_d1;
wire    ap_channel_done_Stage_I_4;
wire    fft_stage_3_U0_Out_I_full_n;
reg    ap_sync_reg_channel_write_Stage_I_4;
wire    ap_sync_channel_write_Stage_I_4;
wire    ap_channel_done_Stage_R_4;
wire    fft_stage_3_U0_Out_R_full_n;
reg    ap_sync_reg_channel_write_Stage_R_4;
wire    ap_sync_channel_write_Stage_R_4;
wire    fft_stage_4_U0_ap_start;
wire    fft_stage_4_U0_ap_done;
wire    fft_stage_4_U0_ap_continue;
wire    fft_stage_4_U0_ap_idle;
wire    fft_stage_4_U0_ap_ready;
wire   [9:0] fft_stage_4_U0_X_R_address0;
wire    fft_stage_4_U0_X_R_ce0;
wire   [9:0] fft_stage_4_U0_X_R_address1;
wire    fft_stage_4_U0_X_R_ce1;
wire   [9:0] fft_stage_4_U0_X_I_address0;
wire    fft_stage_4_U0_X_I_ce0;
wire   [9:0] fft_stage_4_U0_X_I_address1;
wire    fft_stage_4_U0_X_I_ce1;
wire   [9:0] fft_stage_4_U0_Out_R_address0;
wire    fft_stage_4_U0_Out_R_ce0;
wire    fft_stage_4_U0_Out_R_we0;
wire   [31:0] fft_stage_4_U0_Out_R_d0;
wire   [9:0] fft_stage_4_U0_Out_R_address1;
wire    fft_stage_4_U0_Out_R_ce1;
wire    fft_stage_4_U0_Out_R_we1;
wire   [31:0] fft_stage_4_U0_Out_R_d1;
wire   [9:0] fft_stage_4_U0_Out_I_address0;
wire    fft_stage_4_U0_Out_I_ce0;
wire    fft_stage_4_U0_Out_I_we0;
wire   [31:0] fft_stage_4_U0_Out_I_d0;
wire   [9:0] fft_stage_4_U0_Out_I_address1;
wire    fft_stage_4_U0_Out_I_ce1;
wire    fft_stage_4_U0_Out_I_we1;
wire   [31:0] fft_stage_4_U0_Out_I_d1;
wire    ap_channel_done_Stage_I_5;
wire    fft_stage_4_U0_Out_I_full_n;
reg    ap_sync_reg_channel_write_Stage_I_5;
wire    ap_sync_channel_write_Stage_I_5;
wire    ap_channel_done_Stage_R_5;
wire    fft_stage_4_U0_Out_R_full_n;
reg    ap_sync_reg_channel_write_Stage_R_5;
wire    ap_sync_channel_write_Stage_R_5;
wire    fft_stage_5_U0_ap_start;
wire    fft_stage_5_U0_ap_done;
wire    fft_stage_5_U0_ap_continue;
wire    fft_stage_5_U0_ap_idle;
wire    fft_stage_5_U0_ap_ready;
wire   [9:0] fft_stage_5_U0_X_R_address0;
wire    fft_stage_5_U0_X_R_ce0;
wire   [9:0] fft_stage_5_U0_X_R_address1;
wire    fft_stage_5_U0_X_R_ce1;
wire   [9:0] fft_stage_5_U0_X_I_address0;
wire    fft_stage_5_U0_X_I_ce0;
wire   [9:0] fft_stage_5_U0_X_I_address1;
wire    fft_stage_5_U0_X_I_ce1;
wire   [9:0] fft_stage_5_U0_Out_R_address0;
wire    fft_stage_5_U0_Out_R_ce0;
wire    fft_stage_5_U0_Out_R_we0;
wire   [31:0] fft_stage_5_U0_Out_R_d0;
wire   [9:0] fft_stage_5_U0_Out_R_address1;
wire    fft_stage_5_U0_Out_R_ce1;
wire    fft_stage_5_U0_Out_R_we1;
wire   [31:0] fft_stage_5_U0_Out_R_d1;
wire   [9:0] fft_stage_5_U0_Out_I_address0;
wire    fft_stage_5_U0_Out_I_ce0;
wire    fft_stage_5_U0_Out_I_we0;
wire   [31:0] fft_stage_5_U0_Out_I_d0;
wire   [9:0] fft_stage_5_U0_Out_I_address1;
wire    fft_stage_5_U0_Out_I_ce1;
wire    fft_stage_5_U0_Out_I_we1;
wire   [31:0] fft_stage_5_U0_Out_I_d1;
wire    ap_channel_done_Stage_I_6;
wire    fft_stage_5_U0_Out_I_full_n;
reg    ap_sync_reg_channel_write_Stage_I_6;
wire    ap_sync_channel_write_Stage_I_6;
wire    ap_channel_done_Stage_R_6;
wire    fft_stage_5_U0_Out_R_full_n;
reg    ap_sync_reg_channel_write_Stage_R_6;
wire    ap_sync_channel_write_Stage_R_6;
wire    fft_stage_6_U0_ap_start;
wire    fft_stage_6_U0_ap_done;
wire    fft_stage_6_U0_ap_continue;
wire    fft_stage_6_U0_ap_idle;
wire    fft_stage_6_U0_ap_ready;
wire   [9:0] fft_stage_6_U0_X_R_address0;
wire    fft_stage_6_U0_X_R_ce0;
wire   [9:0] fft_stage_6_U0_X_R_address1;
wire    fft_stage_6_U0_X_R_ce1;
wire   [9:0] fft_stage_6_U0_X_I_address0;
wire    fft_stage_6_U0_X_I_ce0;
wire   [9:0] fft_stage_6_U0_X_I_address1;
wire    fft_stage_6_U0_X_I_ce1;
wire   [9:0] fft_stage_6_U0_Out_R_address0;
wire    fft_stage_6_U0_Out_R_ce0;
wire    fft_stage_6_U0_Out_R_we0;
wire   [31:0] fft_stage_6_U0_Out_R_d0;
wire   [9:0] fft_stage_6_U0_Out_R_address1;
wire    fft_stage_6_U0_Out_R_ce1;
wire    fft_stage_6_U0_Out_R_we1;
wire   [31:0] fft_stage_6_U0_Out_R_d1;
wire   [9:0] fft_stage_6_U0_Out_I_address0;
wire    fft_stage_6_U0_Out_I_ce0;
wire    fft_stage_6_U0_Out_I_we0;
wire   [31:0] fft_stage_6_U0_Out_I_d0;
wire   [9:0] fft_stage_6_U0_Out_I_address1;
wire    fft_stage_6_U0_Out_I_ce1;
wire    fft_stage_6_U0_Out_I_we1;
wire   [31:0] fft_stage_6_U0_Out_I_d1;
wire    ap_channel_done_Stage_I_7;
wire    fft_stage_6_U0_Out_I_full_n;
reg    ap_sync_reg_channel_write_Stage_I_7;
wire    ap_sync_channel_write_Stage_I_7;
wire    ap_channel_done_Stage_R_7;
wire    fft_stage_6_U0_Out_R_full_n;
reg    ap_sync_reg_channel_write_Stage_R_7;
wire    ap_sync_channel_write_Stage_R_7;
wire    fft_stage_7_U0_ap_start;
wire    fft_stage_7_U0_ap_done;
wire    fft_stage_7_U0_ap_continue;
wire    fft_stage_7_U0_ap_idle;
wire    fft_stage_7_U0_ap_ready;
wire   [9:0] fft_stage_7_U0_X_R_address0;
wire    fft_stage_7_U0_X_R_ce0;
wire   [9:0] fft_stage_7_U0_X_R_address1;
wire    fft_stage_7_U0_X_R_ce1;
wire   [9:0] fft_stage_7_U0_X_I_address0;
wire    fft_stage_7_U0_X_I_ce0;
wire   [9:0] fft_stage_7_U0_X_I_address1;
wire    fft_stage_7_U0_X_I_ce1;
wire   [9:0] fft_stage_7_U0_Out_R_address0;
wire    fft_stage_7_U0_Out_R_ce0;
wire    fft_stage_7_U0_Out_R_we0;
wire   [31:0] fft_stage_7_U0_Out_R_d0;
wire   [9:0] fft_stage_7_U0_Out_R_address1;
wire    fft_stage_7_U0_Out_R_ce1;
wire    fft_stage_7_U0_Out_R_we1;
wire   [31:0] fft_stage_7_U0_Out_R_d1;
wire   [9:0] fft_stage_7_U0_Out_I_address0;
wire    fft_stage_7_U0_Out_I_ce0;
wire    fft_stage_7_U0_Out_I_we0;
wire   [31:0] fft_stage_7_U0_Out_I_d0;
wire   [9:0] fft_stage_7_U0_Out_I_address1;
wire    fft_stage_7_U0_Out_I_ce1;
wire    fft_stage_7_U0_Out_I_we1;
wire   [31:0] fft_stage_7_U0_Out_I_d1;
wire    ap_channel_done_Stage_I_8;
wire    fft_stage_7_U0_Out_I_full_n;
reg    ap_sync_reg_channel_write_Stage_I_8;
wire    ap_sync_channel_write_Stage_I_8;
wire    ap_channel_done_Stage_R_8;
wire    fft_stage_7_U0_Out_R_full_n;
reg    ap_sync_reg_channel_write_Stage_R_8;
wire    ap_sync_channel_write_Stage_R_8;
wire    fft_stage_8_U0_ap_start;
wire    fft_stage_8_U0_ap_done;
wire    fft_stage_8_U0_ap_continue;
wire    fft_stage_8_U0_ap_idle;
wire    fft_stage_8_U0_ap_ready;
wire   [9:0] fft_stage_8_U0_X_R_address0;
wire    fft_stage_8_U0_X_R_ce0;
wire   [9:0] fft_stage_8_U0_X_R_address1;
wire    fft_stage_8_U0_X_R_ce1;
wire   [9:0] fft_stage_8_U0_X_I_address0;
wire    fft_stage_8_U0_X_I_ce0;
wire   [9:0] fft_stage_8_U0_X_I_address1;
wire    fft_stage_8_U0_X_I_ce1;
wire   [9:0] fft_stage_8_U0_Out_R_address0;
wire    fft_stage_8_U0_Out_R_ce0;
wire    fft_stage_8_U0_Out_R_we0;
wire   [31:0] fft_stage_8_U0_Out_R_d0;
wire   [9:0] fft_stage_8_U0_Out_R_address1;
wire    fft_stage_8_U0_Out_R_ce1;
wire    fft_stage_8_U0_Out_R_we1;
wire   [31:0] fft_stage_8_U0_Out_R_d1;
wire   [9:0] fft_stage_8_U0_Out_I_address0;
wire    fft_stage_8_U0_Out_I_ce0;
wire    fft_stage_8_U0_Out_I_we0;
wire   [31:0] fft_stage_8_U0_Out_I_d0;
wire   [9:0] fft_stage_8_U0_Out_I_address1;
wire    fft_stage_8_U0_Out_I_ce1;
wire    fft_stage_8_U0_Out_I_we1;
wire   [31:0] fft_stage_8_U0_Out_I_d1;
wire    ap_channel_done_Stage_I_9;
wire    fft_stage_8_U0_Out_I_full_n;
reg    ap_sync_reg_channel_write_Stage_I_9;
wire    ap_sync_channel_write_Stage_I_9;
wire    ap_channel_done_Stage_R_9;
wire    fft_stage_8_U0_Out_R_full_n;
reg    ap_sync_reg_channel_write_Stage_R_9;
wire    ap_sync_channel_write_Stage_R_9;
wire    fft_stage_9_U0_ap_start;
wire    fft_stage_9_U0_ap_done;
wire    fft_stage_9_U0_ap_continue;
wire    fft_stage_9_U0_ap_idle;
wire    fft_stage_9_U0_ap_ready;
wire   [9:0] fft_stage_9_U0_X_R_address0;
wire    fft_stage_9_U0_X_R_ce0;
wire   [9:0] fft_stage_9_U0_X_R_address1;
wire    fft_stage_9_U0_X_R_ce1;
wire   [9:0] fft_stage_9_U0_X_I_address0;
wire    fft_stage_9_U0_X_I_ce0;
wire   [9:0] fft_stage_9_U0_X_I_address1;
wire    fft_stage_9_U0_X_I_ce1;
wire   [9:0] fft_stage_9_U0_OUT_R_address0;
wire    fft_stage_9_U0_OUT_R_ce0;
wire    fft_stage_9_U0_OUT_R_we0;
wire   [31:0] fft_stage_9_U0_OUT_R_d0;
wire   [9:0] fft_stage_9_U0_OUT_R_address1;
wire    fft_stage_9_U0_OUT_R_ce1;
wire    fft_stage_9_U0_OUT_R_we1;
wire   [31:0] fft_stage_9_U0_OUT_R_d1;
wire   [9:0] fft_stage_9_U0_OUT_I_address0;
wire    fft_stage_9_U0_OUT_I_ce0;
wire    fft_stage_9_U0_OUT_I_we0;
wire   [31:0] fft_stage_9_U0_OUT_I_d0;
wire   [9:0] fft_stage_9_U0_OUT_I_address1;
wire    fft_stage_9_U0_OUT_I_ce1;
wire    fft_stage_9_U0_OUT_I_we1;
wire   [31:0] fft_stage_9_U0_OUT_I_d1;
wire    Stage_R_i_full_n;
wire    Stage_R_t_empty_n;
wire    Stage_I_i_full_n;
wire    Stage_I_t_empty_n;
wire    Stage_R_1_i_full_n;
wire    Stage_R_1_t_empty_n;
wire    Stage_I_1_i_full_n;
wire    Stage_I_1_t_empty_n;
wire    Stage_R_2_i_full_n;
wire    Stage_R_2_t_empty_n;
wire    Stage_I_2_i_full_n;
wire    Stage_I_2_t_empty_n;
wire    Stage_R_3_i_full_n;
wire    Stage_R_3_t_empty_n;
wire    Stage_I_3_i_full_n;
wire    Stage_I_3_t_empty_n;
wire    Stage_R_4_i_full_n;
wire    Stage_R_4_t_empty_n;
wire    Stage_I_4_i_full_n;
wire    Stage_I_4_t_empty_n;
wire    Stage_R_5_i_full_n;
wire    Stage_R_5_t_empty_n;
wire    Stage_I_5_i_full_n;
wire    Stage_I_5_t_empty_n;
wire    Stage_R_6_i_full_n;
wire    Stage_R_6_t_empty_n;
wire    Stage_I_6_i_full_n;
wire    Stage_I_6_t_empty_n;
wire    Stage_R_7_i_full_n;
wire    Stage_R_7_t_empty_n;
wire    Stage_I_7_i_full_n;
wire    Stage_I_7_t_empty_n;
wire    Stage_R_8_i_full_n;
wire    Stage_R_8_t_empty_n;
wire    Stage_I_8_i_full_n;
wire    Stage_I_8_t_empty_n;
wire    Stage_R_9_i_full_n;
wire    Stage_R_9_t_empty_n;
wire    Stage_I_9_i_full_n;
wire    Stage_I_9_t_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_Stage_I = 1'b0;
#0 ap_sync_reg_channel_write_Stage_R = 1'b0;
#0 ap_sync_reg_channel_write_Stage_I_1 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_R_1 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_I_2 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_R_2 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_I_3 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_R_3 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_I_4 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_R_4 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_I_5 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_R_5 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_I_6 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_R_6 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_I_7 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_R_7 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_I_8 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_R_8 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_I_9 = 1'b0;
#0 ap_sync_reg_channel_write_Stage_R_9 = 1'b0;
end

fft_streaming_Stage_R_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_R_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(bit_reverse_U0_OUT_R_address0),
    .i_ce0(bit_reverse_U0_OUT_R_ce0),
    .i_we0(bit_reverse_U0_OUT_R_we0),
    .i_d0(bit_reverse_U0_OUT_R_d0),
    .i_q0(Stage_R_i_q0),
    .i_address1(10'd0),
    .i_ce1(1'b0),
    .i_q1(Stage_R_i_q1),
    .t_address0(fft_stage_U0_X_R_address0),
    .t_ce0(fft_stage_U0_X_R_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_R_t_q0),
    .t_address1(fft_stage_U0_X_R_address1),
    .t_ce1(fft_stage_U0_X_R_ce1),
    .t_q1(Stage_R_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_R_i_full_n),
    .i_write(ap_channel_done_Stage_R),
    .t_empty_n(Stage_R_t_empty_n),
    .t_read(fft_stage_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_R_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_U0_Out_R_address0),
    .i_ce0(fft_stage_U0_Out_R_ce0),
    .i_we0(fft_stage_U0_Out_R_we0),
    .i_d0(fft_stage_U0_Out_R_d0),
    .i_q0(Stage_R_1_i_q0),
    .i_address1(fft_stage_U0_Out_R_address1),
    .i_ce1(fft_stage_U0_Out_R_ce1),
    .i_we1(fft_stage_U0_Out_R_we1),
    .i_d1(fft_stage_U0_Out_R_d1),
    .i_q1(Stage_R_1_i_q1),
    .t_address0(fft_stage_1_U0_X_R_address0),
    .t_ce0(fft_stage_1_U0_X_R_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_R_1_t_q0),
    .t_address1(fft_stage_1_U0_X_R_address1),
    .t_ce1(fft_stage_1_U0_X_R_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_R_1_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_R_1_i_full_n),
    .i_write(ap_channel_done_Stage_R_1),
    .t_empty_n(Stage_R_1_t_empty_n),
    .t_read(fft_stage_1_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_R_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_1_U0_Out_R_address0),
    .i_ce0(fft_stage_1_U0_Out_R_ce0),
    .i_we0(fft_stage_1_U0_Out_R_we0),
    .i_d0(fft_stage_1_U0_Out_R_d0),
    .i_q0(Stage_R_2_i_q0),
    .i_address1(fft_stage_1_U0_Out_R_address1),
    .i_ce1(fft_stage_1_U0_Out_R_ce1),
    .i_we1(fft_stage_1_U0_Out_R_we1),
    .i_d1(fft_stage_1_U0_Out_R_d1),
    .i_q1(Stage_R_2_i_q1),
    .t_address0(fft_stage_2_U0_X_R_address0),
    .t_ce0(fft_stage_2_U0_X_R_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_R_2_t_q0),
    .t_address1(fft_stage_2_U0_X_R_address1),
    .t_ce1(fft_stage_2_U0_X_R_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_R_2_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_R_2_i_full_n),
    .i_write(ap_channel_done_Stage_R_2),
    .t_empty_n(Stage_R_2_t_empty_n),
    .t_read(fft_stage_2_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_R_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_2_U0_Out_R_address0),
    .i_ce0(fft_stage_2_U0_Out_R_ce0),
    .i_we0(fft_stage_2_U0_Out_R_we0),
    .i_d0(fft_stage_2_U0_Out_R_d0),
    .i_q0(Stage_R_3_i_q0),
    .i_address1(fft_stage_2_U0_Out_R_address1),
    .i_ce1(fft_stage_2_U0_Out_R_ce1),
    .i_we1(fft_stage_2_U0_Out_R_we1),
    .i_d1(fft_stage_2_U0_Out_R_d1),
    .i_q1(Stage_R_3_i_q1),
    .t_address0(fft_stage_3_U0_X_R_address0),
    .t_ce0(fft_stage_3_U0_X_R_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_R_3_t_q0),
    .t_address1(fft_stage_3_U0_X_R_address1),
    .t_ce1(fft_stage_3_U0_X_R_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_R_3_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_R_3_i_full_n),
    .i_write(ap_channel_done_Stage_R_3),
    .t_empty_n(Stage_R_3_t_empty_n),
    .t_read(fft_stage_3_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_R_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_3_U0_Out_R_address0),
    .i_ce0(fft_stage_3_U0_Out_R_ce0),
    .i_we0(fft_stage_3_U0_Out_R_we0),
    .i_d0(fft_stage_3_U0_Out_R_d0),
    .i_q0(Stage_R_4_i_q0),
    .i_address1(fft_stage_3_U0_Out_R_address1),
    .i_ce1(fft_stage_3_U0_Out_R_ce1),
    .i_we1(fft_stage_3_U0_Out_R_we1),
    .i_d1(fft_stage_3_U0_Out_R_d1),
    .i_q1(Stage_R_4_i_q1),
    .t_address0(fft_stage_4_U0_X_R_address0),
    .t_ce0(fft_stage_4_U0_X_R_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_R_4_t_q0),
    .t_address1(fft_stage_4_U0_X_R_address1),
    .t_ce1(fft_stage_4_U0_X_R_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_R_4_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_R_4_i_full_n),
    .i_write(ap_channel_done_Stage_R_4),
    .t_empty_n(Stage_R_4_t_empty_n),
    .t_read(fft_stage_4_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_R_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_4_U0_Out_R_address0),
    .i_ce0(fft_stage_4_U0_Out_R_ce0),
    .i_we0(fft_stage_4_U0_Out_R_we0),
    .i_d0(fft_stage_4_U0_Out_R_d0),
    .i_q0(Stage_R_5_i_q0),
    .i_address1(fft_stage_4_U0_Out_R_address1),
    .i_ce1(fft_stage_4_U0_Out_R_ce1),
    .i_we1(fft_stage_4_U0_Out_R_we1),
    .i_d1(fft_stage_4_U0_Out_R_d1),
    .i_q1(Stage_R_5_i_q1),
    .t_address0(fft_stage_5_U0_X_R_address0),
    .t_ce0(fft_stage_5_U0_X_R_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_R_5_t_q0),
    .t_address1(fft_stage_5_U0_X_R_address1),
    .t_ce1(fft_stage_5_U0_X_R_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_R_5_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_R_5_i_full_n),
    .i_write(ap_channel_done_Stage_R_5),
    .t_empty_n(Stage_R_5_t_empty_n),
    .t_read(fft_stage_5_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_R_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_5_U0_Out_R_address0),
    .i_ce0(fft_stage_5_U0_Out_R_ce0),
    .i_we0(fft_stage_5_U0_Out_R_we0),
    .i_d0(fft_stage_5_U0_Out_R_d0),
    .i_q0(Stage_R_6_i_q0),
    .i_address1(fft_stage_5_U0_Out_R_address1),
    .i_ce1(fft_stage_5_U0_Out_R_ce1),
    .i_we1(fft_stage_5_U0_Out_R_we1),
    .i_d1(fft_stage_5_U0_Out_R_d1),
    .i_q1(Stage_R_6_i_q1),
    .t_address0(fft_stage_6_U0_X_R_address0),
    .t_ce0(fft_stage_6_U0_X_R_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_R_6_t_q0),
    .t_address1(fft_stage_6_U0_X_R_address1),
    .t_ce1(fft_stage_6_U0_X_R_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_R_6_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_R_6_i_full_n),
    .i_write(ap_channel_done_Stage_R_6),
    .t_empty_n(Stage_R_6_t_empty_n),
    .t_read(fft_stage_6_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_R_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_6_U0_Out_R_address0),
    .i_ce0(fft_stage_6_U0_Out_R_ce0),
    .i_we0(fft_stage_6_U0_Out_R_we0),
    .i_d0(fft_stage_6_U0_Out_R_d0),
    .i_q0(Stage_R_7_i_q0),
    .i_address1(fft_stage_6_U0_Out_R_address1),
    .i_ce1(fft_stage_6_U0_Out_R_ce1),
    .i_we1(fft_stage_6_U0_Out_R_we1),
    .i_d1(fft_stage_6_U0_Out_R_d1),
    .i_q1(Stage_R_7_i_q1),
    .t_address0(fft_stage_7_U0_X_R_address0),
    .t_ce0(fft_stage_7_U0_X_R_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_R_7_t_q0),
    .t_address1(fft_stage_7_U0_X_R_address1),
    .t_ce1(fft_stage_7_U0_X_R_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_R_7_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_R_7_i_full_n),
    .i_write(ap_channel_done_Stage_R_7),
    .t_empty_n(Stage_R_7_t_empty_n),
    .t_read(fft_stage_7_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_R_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_7_U0_Out_R_address0),
    .i_ce0(fft_stage_7_U0_Out_R_ce0),
    .i_we0(fft_stage_7_U0_Out_R_we0),
    .i_d0(fft_stage_7_U0_Out_R_d0),
    .i_q0(Stage_R_8_i_q0),
    .i_address1(fft_stage_7_U0_Out_R_address1),
    .i_ce1(fft_stage_7_U0_Out_R_ce1),
    .i_we1(fft_stage_7_U0_Out_R_we1),
    .i_d1(fft_stage_7_U0_Out_R_d1),
    .i_q1(Stage_R_8_i_q1),
    .t_address0(fft_stage_8_U0_X_R_address0),
    .t_ce0(fft_stage_8_U0_X_R_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_R_8_t_q0),
    .t_address1(fft_stage_8_U0_X_R_address1),
    .t_ce1(fft_stage_8_U0_X_R_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_R_8_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_R_8_i_full_n),
    .i_write(ap_channel_done_Stage_R_8),
    .t_empty_n(Stage_R_8_t_empty_n),
    .t_read(fft_stage_8_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_R_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_8_U0_Out_R_address0),
    .i_ce0(fft_stage_8_U0_Out_R_ce0),
    .i_we0(fft_stage_8_U0_Out_R_we0),
    .i_d0(fft_stage_8_U0_Out_R_d0),
    .i_q0(Stage_R_9_i_q0),
    .i_address1(fft_stage_8_U0_Out_R_address1),
    .i_ce1(fft_stage_8_U0_Out_R_ce1),
    .i_we1(fft_stage_8_U0_Out_R_we1),
    .i_d1(fft_stage_8_U0_Out_R_d1),
    .i_q1(Stage_R_9_i_q1),
    .t_address0(fft_stage_9_U0_X_R_address0),
    .t_ce0(fft_stage_9_U0_X_R_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_R_9_t_q0),
    .t_address1(fft_stage_9_U0_X_R_address1),
    .t_ce1(fft_stage_9_U0_X_R_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_R_9_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_R_9_i_full_n),
    .i_write(ap_channel_done_Stage_R_9),
    .t_empty_n(Stage_R_9_t_empty_n),
    .t_read(fft_stage_9_U0_ap_ready)
);

fft_streaming_Stage_R_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_I_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(bit_reverse_U0_OUT_I_address0),
    .i_ce0(bit_reverse_U0_OUT_I_ce0),
    .i_we0(bit_reverse_U0_OUT_I_we0),
    .i_d0(bit_reverse_U0_OUT_I_d0),
    .i_q0(Stage_I_i_q0),
    .i_address1(10'd0),
    .i_ce1(1'b0),
    .i_q1(Stage_I_i_q1),
    .t_address0(fft_stage_U0_X_I_address0),
    .t_ce0(fft_stage_U0_X_I_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_I_t_q0),
    .t_address1(fft_stage_U0_X_I_address1),
    .t_ce1(fft_stage_U0_X_I_ce1),
    .t_q1(Stage_I_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_I_i_full_n),
    .i_write(ap_channel_done_Stage_I),
    .t_empty_n(Stage_I_t_empty_n),
    .t_read(fft_stage_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_I_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_U0_Out_I_address0),
    .i_ce0(fft_stage_U0_Out_I_ce0),
    .i_we0(fft_stage_U0_Out_I_we0),
    .i_d0(fft_stage_U0_Out_I_d0),
    .i_q0(Stage_I_1_i_q0),
    .i_address1(fft_stage_U0_Out_I_address1),
    .i_ce1(fft_stage_U0_Out_I_ce1),
    .i_we1(fft_stage_U0_Out_I_we1),
    .i_d1(fft_stage_U0_Out_I_d1),
    .i_q1(Stage_I_1_i_q1),
    .t_address0(fft_stage_1_U0_X_I_address0),
    .t_ce0(fft_stage_1_U0_X_I_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_I_1_t_q0),
    .t_address1(fft_stage_1_U0_X_I_address1),
    .t_ce1(fft_stage_1_U0_X_I_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_I_1_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_I_1_i_full_n),
    .i_write(ap_channel_done_Stage_I_1),
    .t_empty_n(Stage_I_1_t_empty_n),
    .t_read(fft_stage_1_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_I_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_1_U0_Out_I_address0),
    .i_ce0(fft_stage_1_U0_Out_I_ce0),
    .i_we0(fft_stage_1_U0_Out_I_we0),
    .i_d0(fft_stage_1_U0_Out_I_d0),
    .i_q0(Stage_I_2_i_q0),
    .i_address1(fft_stage_1_U0_Out_I_address1),
    .i_ce1(fft_stage_1_U0_Out_I_ce1),
    .i_we1(fft_stage_1_U0_Out_I_we1),
    .i_d1(fft_stage_1_U0_Out_I_d1),
    .i_q1(Stage_I_2_i_q1),
    .t_address0(fft_stage_2_U0_X_I_address0),
    .t_ce0(fft_stage_2_U0_X_I_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_I_2_t_q0),
    .t_address1(fft_stage_2_U0_X_I_address1),
    .t_ce1(fft_stage_2_U0_X_I_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_I_2_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_I_2_i_full_n),
    .i_write(ap_channel_done_Stage_I_2),
    .t_empty_n(Stage_I_2_t_empty_n),
    .t_read(fft_stage_2_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_I_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_2_U0_Out_I_address0),
    .i_ce0(fft_stage_2_U0_Out_I_ce0),
    .i_we0(fft_stage_2_U0_Out_I_we0),
    .i_d0(fft_stage_2_U0_Out_I_d0),
    .i_q0(Stage_I_3_i_q0),
    .i_address1(fft_stage_2_U0_Out_I_address1),
    .i_ce1(fft_stage_2_U0_Out_I_ce1),
    .i_we1(fft_stage_2_U0_Out_I_we1),
    .i_d1(fft_stage_2_U0_Out_I_d1),
    .i_q1(Stage_I_3_i_q1),
    .t_address0(fft_stage_3_U0_X_I_address0),
    .t_ce0(fft_stage_3_U0_X_I_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_I_3_t_q0),
    .t_address1(fft_stage_3_U0_X_I_address1),
    .t_ce1(fft_stage_3_U0_X_I_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_I_3_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_I_3_i_full_n),
    .i_write(ap_channel_done_Stage_I_3),
    .t_empty_n(Stage_I_3_t_empty_n),
    .t_read(fft_stage_3_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_I_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_3_U0_Out_I_address0),
    .i_ce0(fft_stage_3_U0_Out_I_ce0),
    .i_we0(fft_stage_3_U0_Out_I_we0),
    .i_d0(fft_stage_3_U0_Out_I_d0),
    .i_q0(Stage_I_4_i_q0),
    .i_address1(fft_stage_3_U0_Out_I_address1),
    .i_ce1(fft_stage_3_U0_Out_I_ce1),
    .i_we1(fft_stage_3_U0_Out_I_we1),
    .i_d1(fft_stage_3_U0_Out_I_d1),
    .i_q1(Stage_I_4_i_q1),
    .t_address0(fft_stage_4_U0_X_I_address0),
    .t_ce0(fft_stage_4_U0_X_I_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_I_4_t_q0),
    .t_address1(fft_stage_4_U0_X_I_address1),
    .t_ce1(fft_stage_4_U0_X_I_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_I_4_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_I_4_i_full_n),
    .i_write(ap_channel_done_Stage_I_4),
    .t_empty_n(Stage_I_4_t_empty_n),
    .t_read(fft_stage_4_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_I_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_4_U0_Out_I_address0),
    .i_ce0(fft_stage_4_U0_Out_I_ce0),
    .i_we0(fft_stage_4_U0_Out_I_we0),
    .i_d0(fft_stage_4_U0_Out_I_d0),
    .i_q0(Stage_I_5_i_q0),
    .i_address1(fft_stage_4_U0_Out_I_address1),
    .i_ce1(fft_stage_4_U0_Out_I_ce1),
    .i_we1(fft_stage_4_U0_Out_I_we1),
    .i_d1(fft_stage_4_U0_Out_I_d1),
    .i_q1(Stage_I_5_i_q1),
    .t_address0(fft_stage_5_U0_X_I_address0),
    .t_ce0(fft_stage_5_U0_X_I_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_I_5_t_q0),
    .t_address1(fft_stage_5_U0_X_I_address1),
    .t_ce1(fft_stage_5_U0_X_I_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_I_5_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_I_5_i_full_n),
    .i_write(ap_channel_done_Stage_I_5),
    .t_empty_n(Stage_I_5_t_empty_n),
    .t_read(fft_stage_5_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_I_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_5_U0_Out_I_address0),
    .i_ce0(fft_stage_5_U0_Out_I_ce0),
    .i_we0(fft_stage_5_U0_Out_I_we0),
    .i_d0(fft_stage_5_U0_Out_I_d0),
    .i_q0(Stage_I_6_i_q0),
    .i_address1(fft_stage_5_U0_Out_I_address1),
    .i_ce1(fft_stage_5_U0_Out_I_ce1),
    .i_we1(fft_stage_5_U0_Out_I_we1),
    .i_d1(fft_stage_5_U0_Out_I_d1),
    .i_q1(Stage_I_6_i_q1),
    .t_address0(fft_stage_6_U0_X_I_address0),
    .t_ce0(fft_stage_6_U0_X_I_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_I_6_t_q0),
    .t_address1(fft_stage_6_U0_X_I_address1),
    .t_ce1(fft_stage_6_U0_X_I_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_I_6_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_I_6_i_full_n),
    .i_write(ap_channel_done_Stage_I_6),
    .t_empty_n(Stage_I_6_t_empty_n),
    .t_read(fft_stage_6_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_I_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_6_U0_Out_I_address0),
    .i_ce0(fft_stage_6_U0_Out_I_ce0),
    .i_we0(fft_stage_6_U0_Out_I_we0),
    .i_d0(fft_stage_6_U0_Out_I_d0),
    .i_q0(Stage_I_7_i_q0),
    .i_address1(fft_stage_6_U0_Out_I_address1),
    .i_ce1(fft_stage_6_U0_Out_I_ce1),
    .i_we1(fft_stage_6_U0_Out_I_we1),
    .i_d1(fft_stage_6_U0_Out_I_d1),
    .i_q1(Stage_I_7_i_q1),
    .t_address0(fft_stage_7_U0_X_I_address0),
    .t_ce0(fft_stage_7_U0_X_I_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_I_7_t_q0),
    .t_address1(fft_stage_7_U0_X_I_address1),
    .t_ce1(fft_stage_7_U0_X_I_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_I_7_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_I_7_i_full_n),
    .i_write(ap_channel_done_Stage_I_7),
    .t_empty_n(Stage_I_7_t_empty_n),
    .t_read(fft_stage_7_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_I_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_7_U0_Out_I_address0),
    .i_ce0(fft_stage_7_U0_Out_I_ce0),
    .i_we0(fft_stage_7_U0_Out_I_we0),
    .i_d0(fft_stage_7_U0_Out_I_d0),
    .i_q0(Stage_I_8_i_q0),
    .i_address1(fft_stage_7_U0_Out_I_address1),
    .i_ce1(fft_stage_7_U0_Out_I_ce1),
    .i_we1(fft_stage_7_U0_Out_I_we1),
    .i_d1(fft_stage_7_U0_Out_I_d1),
    .i_q1(Stage_I_8_i_q1),
    .t_address0(fft_stage_8_U0_X_I_address0),
    .t_ce0(fft_stage_8_U0_X_I_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_I_8_t_q0),
    .t_address1(fft_stage_8_U0_X_I_address1),
    .t_ce1(fft_stage_8_U0_X_I_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_I_8_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_I_8_i_full_n),
    .i_write(ap_channel_done_Stage_I_8),
    .t_empty_n(Stage_I_8_t_empty_n),
    .t_read(fft_stage_8_U0_ap_ready)
);

fft_streaming_Stage_R_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Stage_I_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(fft_stage_8_U0_Out_I_address0),
    .i_ce0(fft_stage_8_U0_Out_I_ce0),
    .i_we0(fft_stage_8_U0_Out_I_we0),
    .i_d0(fft_stage_8_U0_Out_I_d0),
    .i_q0(Stage_I_9_i_q0),
    .i_address1(fft_stage_8_U0_Out_I_address1),
    .i_ce1(fft_stage_8_U0_Out_I_ce1),
    .i_we1(fft_stage_8_U0_Out_I_we1),
    .i_d1(fft_stage_8_U0_Out_I_d1),
    .i_q1(Stage_I_9_i_q1),
    .t_address0(fft_stage_9_U0_X_I_address0),
    .t_ce0(fft_stage_9_U0_X_I_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage_I_9_t_q0),
    .t_address1(fft_stage_9_U0_X_I_address1),
    .t_ce1(fft_stage_9_U0_X_I_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(Stage_I_9_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage_I_9_i_full_n),
    .i_write(ap_channel_done_Stage_I_9),
    .t_empty_n(Stage_I_9_t_empty_n),
    .t_read(fft_stage_9_U0_ap_ready)
);

fft_streaming_bit_reverse bit_reverse_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(bit_reverse_U0_ap_start),
    .ap_done(bit_reverse_U0_ap_done),
    .ap_continue(bit_reverse_U0_ap_continue),
    .ap_idle(bit_reverse_U0_ap_idle),
    .ap_ready(bit_reverse_U0_ap_ready),
    .X_R_address0(bit_reverse_U0_X_R_address0),
    .X_R_ce0(bit_reverse_U0_X_R_ce0),
    .X_R_q0(X_R_q0),
    .X_R_address1(bit_reverse_U0_X_R_address1),
    .X_R_ce1(bit_reverse_U0_X_R_ce1),
    .X_R_q1(X_R_q1),
    .X_I_address0(bit_reverse_U0_X_I_address0),
    .X_I_ce0(bit_reverse_U0_X_I_ce0),
    .X_I_q0(X_I_q0),
    .X_I_address1(bit_reverse_U0_X_I_address1),
    .X_I_ce1(bit_reverse_U0_X_I_ce1),
    .X_I_q1(X_I_q1),
    .OUT_R_address0(bit_reverse_U0_OUT_R_address0),
    .OUT_R_ce0(bit_reverse_U0_OUT_R_ce0),
    .OUT_R_we0(bit_reverse_U0_OUT_R_we0),
    .OUT_R_d0(bit_reverse_U0_OUT_R_d0),
    .OUT_I_address0(bit_reverse_U0_OUT_I_address0),
    .OUT_I_ce0(bit_reverse_U0_OUT_I_ce0),
    .OUT_I_we0(bit_reverse_U0_OUT_I_we0),
    .OUT_I_d0(bit_reverse_U0_OUT_I_d0)
);

fft_streaming_fft_stage fft_stage_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_U0_ap_start),
    .ap_done(fft_stage_U0_ap_done),
    .ap_continue(fft_stage_U0_ap_continue),
    .ap_idle(fft_stage_U0_ap_idle),
    .ap_ready(fft_stage_U0_ap_ready),
    .X_R_address0(fft_stage_U0_X_R_address0),
    .X_R_ce0(fft_stage_U0_X_R_ce0),
    .X_R_q0(Stage_R_t_q0),
    .X_R_address1(fft_stage_U0_X_R_address1),
    .X_R_ce1(fft_stage_U0_X_R_ce1),
    .X_R_q1(Stage_R_t_q1),
    .X_I_address0(fft_stage_U0_X_I_address0),
    .X_I_ce0(fft_stage_U0_X_I_ce0),
    .X_I_q0(Stage_I_t_q0),
    .X_I_address1(fft_stage_U0_X_I_address1),
    .X_I_ce1(fft_stage_U0_X_I_ce1),
    .X_I_q1(Stage_I_t_q1),
    .Out_R_address0(fft_stage_U0_Out_R_address0),
    .Out_R_ce0(fft_stage_U0_Out_R_ce0),
    .Out_R_we0(fft_stage_U0_Out_R_we0),
    .Out_R_d0(fft_stage_U0_Out_R_d0),
    .Out_R_address1(fft_stage_U0_Out_R_address1),
    .Out_R_ce1(fft_stage_U0_Out_R_ce1),
    .Out_R_we1(fft_stage_U0_Out_R_we1),
    .Out_R_d1(fft_stage_U0_Out_R_d1),
    .Out_I_address0(fft_stage_U0_Out_I_address0),
    .Out_I_ce0(fft_stage_U0_Out_I_ce0),
    .Out_I_we0(fft_stage_U0_Out_I_we0),
    .Out_I_d0(fft_stage_U0_Out_I_d0),
    .Out_I_address1(fft_stage_U0_Out_I_address1),
    .Out_I_ce1(fft_stage_U0_Out_I_ce1),
    .Out_I_we1(fft_stage_U0_Out_I_we1),
    .Out_I_d1(fft_stage_U0_Out_I_d1)
);

fft_streaming_fft_stage_1 fft_stage_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_1_U0_ap_start),
    .ap_done(fft_stage_1_U0_ap_done),
    .ap_continue(fft_stage_1_U0_ap_continue),
    .ap_idle(fft_stage_1_U0_ap_idle),
    .ap_ready(fft_stage_1_U0_ap_ready),
    .X_R_address0(fft_stage_1_U0_X_R_address0),
    .X_R_ce0(fft_stage_1_U0_X_R_ce0),
    .X_R_q0(Stage_R_1_t_q0),
    .X_R_address1(fft_stage_1_U0_X_R_address1),
    .X_R_ce1(fft_stage_1_U0_X_R_ce1),
    .X_R_q1(Stage_R_1_t_q1),
    .X_I_address0(fft_stage_1_U0_X_I_address0),
    .X_I_ce0(fft_stage_1_U0_X_I_ce0),
    .X_I_q0(Stage_I_1_t_q0),
    .X_I_address1(fft_stage_1_U0_X_I_address1),
    .X_I_ce1(fft_stage_1_U0_X_I_ce1),
    .X_I_q1(Stage_I_1_t_q1),
    .Out_R_address0(fft_stage_1_U0_Out_R_address0),
    .Out_R_ce0(fft_stage_1_U0_Out_R_ce0),
    .Out_R_we0(fft_stage_1_U0_Out_R_we0),
    .Out_R_d0(fft_stage_1_U0_Out_R_d0),
    .Out_R_address1(fft_stage_1_U0_Out_R_address1),
    .Out_R_ce1(fft_stage_1_U0_Out_R_ce1),
    .Out_R_we1(fft_stage_1_U0_Out_R_we1),
    .Out_R_d1(fft_stage_1_U0_Out_R_d1),
    .Out_I_address0(fft_stage_1_U0_Out_I_address0),
    .Out_I_ce0(fft_stage_1_U0_Out_I_ce0),
    .Out_I_we0(fft_stage_1_U0_Out_I_we0),
    .Out_I_d0(fft_stage_1_U0_Out_I_d0),
    .Out_I_address1(fft_stage_1_U0_Out_I_address1),
    .Out_I_ce1(fft_stage_1_U0_Out_I_ce1),
    .Out_I_we1(fft_stage_1_U0_Out_I_we1),
    .Out_I_d1(fft_stage_1_U0_Out_I_d1)
);

fft_streaming_fft_stage_2 fft_stage_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_2_U0_ap_start),
    .ap_done(fft_stage_2_U0_ap_done),
    .ap_continue(fft_stage_2_U0_ap_continue),
    .ap_idle(fft_stage_2_U0_ap_idle),
    .ap_ready(fft_stage_2_U0_ap_ready),
    .X_R_address0(fft_stage_2_U0_X_R_address0),
    .X_R_ce0(fft_stage_2_U0_X_R_ce0),
    .X_R_q0(Stage_R_2_t_q0),
    .X_R_address1(fft_stage_2_U0_X_R_address1),
    .X_R_ce1(fft_stage_2_U0_X_R_ce1),
    .X_R_q1(Stage_R_2_t_q1),
    .X_I_address0(fft_stage_2_U0_X_I_address0),
    .X_I_ce0(fft_stage_2_U0_X_I_ce0),
    .X_I_q0(Stage_I_2_t_q0),
    .X_I_address1(fft_stage_2_U0_X_I_address1),
    .X_I_ce1(fft_stage_2_U0_X_I_ce1),
    .X_I_q1(Stage_I_2_t_q1),
    .Out_R_address0(fft_stage_2_U0_Out_R_address0),
    .Out_R_ce0(fft_stage_2_U0_Out_R_ce0),
    .Out_R_we0(fft_stage_2_U0_Out_R_we0),
    .Out_R_d0(fft_stage_2_U0_Out_R_d0),
    .Out_R_address1(fft_stage_2_U0_Out_R_address1),
    .Out_R_ce1(fft_stage_2_U0_Out_R_ce1),
    .Out_R_we1(fft_stage_2_U0_Out_R_we1),
    .Out_R_d1(fft_stage_2_U0_Out_R_d1),
    .Out_I_address0(fft_stage_2_U0_Out_I_address0),
    .Out_I_ce0(fft_stage_2_U0_Out_I_ce0),
    .Out_I_we0(fft_stage_2_U0_Out_I_we0),
    .Out_I_d0(fft_stage_2_U0_Out_I_d0),
    .Out_I_address1(fft_stage_2_U0_Out_I_address1),
    .Out_I_ce1(fft_stage_2_U0_Out_I_ce1),
    .Out_I_we1(fft_stage_2_U0_Out_I_we1),
    .Out_I_d1(fft_stage_2_U0_Out_I_d1)
);

fft_streaming_fft_stage_3 fft_stage_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_3_U0_ap_start),
    .ap_done(fft_stage_3_U0_ap_done),
    .ap_continue(fft_stage_3_U0_ap_continue),
    .ap_idle(fft_stage_3_U0_ap_idle),
    .ap_ready(fft_stage_3_U0_ap_ready),
    .X_R_address0(fft_stage_3_U0_X_R_address0),
    .X_R_ce0(fft_stage_3_U0_X_R_ce0),
    .X_R_q0(Stage_R_3_t_q0),
    .X_R_address1(fft_stage_3_U0_X_R_address1),
    .X_R_ce1(fft_stage_3_U0_X_R_ce1),
    .X_R_q1(Stage_R_3_t_q1),
    .X_I_address0(fft_stage_3_U0_X_I_address0),
    .X_I_ce0(fft_stage_3_U0_X_I_ce0),
    .X_I_q0(Stage_I_3_t_q0),
    .X_I_address1(fft_stage_3_U0_X_I_address1),
    .X_I_ce1(fft_stage_3_U0_X_I_ce1),
    .X_I_q1(Stage_I_3_t_q1),
    .Out_R_address0(fft_stage_3_U0_Out_R_address0),
    .Out_R_ce0(fft_stage_3_U0_Out_R_ce0),
    .Out_R_we0(fft_stage_3_U0_Out_R_we0),
    .Out_R_d0(fft_stage_3_U0_Out_R_d0),
    .Out_R_address1(fft_stage_3_U0_Out_R_address1),
    .Out_R_ce1(fft_stage_3_U0_Out_R_ce1),
    .Out_R_we1(fft_stage_3_U0_Out_R_we1),
    .Out_R_d1(fft_stage_3_U0_Out_R_d1),
    .Out_I_address0(fft_stage_3_U0_Out_I_address0),
    .Out_I_ce0(fft_stage_3_U0_Out_I_ce0),
    .Out_I_we0(fft_stage_3_U0_Out_I_we0),
    .Out_I_d0(fft_stage_3_U0_Out_I_d0),
    .Out_I_address1(fft_stage_3_U0_Out_I_address1),
    .Out_I_ce1(fft_stage_3_U0_Out_I_ce1),
    .Out_I_we1(fft_stage_3_U0_Out_I_we1),
    .Out_I_d1(fft_stage_3_U0_Out_I_d1)
);

fft_streaming_fft_stage_4 fft_stage_4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_4_U0_ap_start),
    .ap_done(fft_stage_4_U0_ap_done),
    .ap_continue(fft_stage_4_U0_ap_continue),
    .ap_idle(fft_stage_4_U0_ap_idle),
    .ap_ready(fft_stage_4_U0_ap_ready),
    .X_R_address0(fft_stage_4_U0_X_R_address0),
    .X_R_ce0(fft_stage_4_U0_X_R_ce0),
    .X_R_q0(Stage_R_4_t_q0),
    .X_R_address1(fft_stage_4_U0_X_R_address1),
    .X_R_ce1(fft_stage_4_U0_X_R_ce1),
    .X_R_q1(Stage_R_4_t_q1),
    .X_I_address0(fft_stage_4_U0_X_I_address0),
    .X_I_ce0(fft_stage_4_U0_X_I_ce0),
    .X_I_q0(Stage_I_4_t_q0),
    .X_I_address1(fft_stage_4_U0_X_I_address1),
    .X_I_ce1(fft_stage_4_U0_X_I_ce1),
    .X_I_q1(Stage_I_4_t_q1),
    .Out_R_address0(fft_stage_4_U0_Out_R_address0),
    .Out_R_ce0(fft_stage_4_U0_Out_R_ce0),
    .Out_R_we0(fft_stage_4_U0_Out_R_we0),
    .Out_R_d0(fft_stage_4_U0_Out_R_d0),
    .Out_R_address1(fft_stage_4_U0_Out_R_address1),
    .Out_R_ce1(fft_stage_4_U0_Out_R_ce1),
    .Out_R_we1(fft_stage_4_U0_Out_R_we1),
    .Out_R_d1(fft_stage_4_U0_Out_R_d1),
    .Out_I_address0(fft_stage_4_U0_Out_I_address0),
    .Out_I_ce0(fft_stage_4_U0_Out_I_ce0),
    .Out_I_we0(fft_stage_4_U0_Out_I_we0),
    .Out_I_d0(fft_stage_4_U0_Out_I_d0),
    .Out_I_address1(fft_stage_4_U0_Out_I_address1),
    .Out_I_ce1(fft_stage_4_U0_Out_I_ce1),
    .Out_I_we1(fft_stage_4_U0_Out_I_we1),
    .Out_I_d1(fft_stage_4_U0_Out_I_d1)
);

fft_streaming_fft_stage_5 fft_stage_5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_5_U0_ap_start),
    .ap_done(fft_stage_5_U0_ap_done),
    .ap_continue(fft_stage_5_U0_ap_continue),
    .ap_idle(fft_stage_5_U0_ap_idle),
    .ap_ready(fft_stage_5_U0_ap_ready),
    .X_R_address0(fft_stage_5_U0_X_R_address0),
    .X_R_ce0(fft_stage_5_U0_X_R_ce0),
    .X_R_q0(Stage_R_5_t_q0),
    .X_R_address1(fft_stage_5_U0_X_R_address1),
    .X_R_ce1(fft_stage_5_U0_X_R_ce1),
    .X_R_q1(Stage_R_5_t_q1),
    .X_I_address0(fft_stage_5_U0_X_I_address0),
    .X_I_ce0(fft_stage_5_U0_X_I_ce0),
    .X_I_q0(Stage_I_5_t_q0),
    .X_I_address1(fft_stage_5_U0_X_I_address1),
    .X_I_ce1(fft_stage_5_U0_X_I_ce1),
    .X_I_q1(Stage_I_5_t_q1),
    .Out_R_address0(fft_stage_5_U0_Out_R_address0),
    .Out_R_ce0(fft_stage_5_U0_Out_R_ce0),
    .Out_R_we0(fft_stage_5_U0_Out_R_we0),
    .Out_R_d0(fft_stage_5_U0_Out_R_d0),
    .Out_R_address1(fft_stage_5_U0_Out_R_address1),
    .Out_R_ce1(fft_stage_5_U0_Out_R_ce1),
    .Out_R_we1(fft_stage_5_U0_Out_R_we1),
    .Out_R_d1(fft_stage_5_U0_Out_R_d1),
    .Out_I_address0(fft_stage_5_U0_Out_I_address0),
    .Out_I_ce0(fft_stage_5_U0_Out_I_ce0),
    .Out_I_we0(fft_stage_5_U0_Out_I_we0),
    .Out_I_d0(fft_stage_5_U0_Out_I_d0),
    .Out_I_address1(fft_stage_5_U0_Out_I_address1),
    .Out_I_ce1(fft_stage_5_U0_Out_I_ce1),
    .Out_I_we1(fft_stage_5_U0_Out_I_we1),
    .Out_I_d1(fft_stage_5_U0_Out_I_d1)
);

fft_streaming_fft_stage_6 fft_stage_6_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_6_U0_ap_start),
    .ap_done(fft_stage_6_U0_ap_done),
    .ap_continue(fft_stage_6_U0_ap_continue),
    .ap_idle(fft_stage_6_U0_ap_idle),
    .ap_ready(fft_stage_6_U0_ap_ready),
    .X_R_address0(fft_stage_6_U0_X_R_address0),
    .X_R_ce0(fft_stage_6_U0_X_R_ce0),
    .X_R_q0(Stage_R_6_t_q0),
    .X_R_address1(fft_stage_6_U0_X_R_address1),
    .X_R_ce1(fft_stage_6_U0_X_R_ce1),
    .X_R_q1(Stage_R_6_t_q1),
    .X_I_address0(fft_stage_6_U0_X_I_address0),
    .X_I_ce0(fft_stage_6_U0_X_I_ce0),
    .X_I_q0(Stage_I_6_t_q0),
    .X_I_address1(fft_stage_6_U0_X_I_address1),
    .X_I_ce1(fft_stage_6_U0_X_I_ce1),
    .X_I_q1(Stage_I_6_t_q1),
    .Out_R_address0(fft_stage_6_U0_Out_R_address0),
    .Out_R_ce0(fft_stage_6_U0_Out_R_ce0),
    .Out_R_we0(fft_stage_6_U0_Out_R_we0),
    .Out_R_d0(fft_stage_6_U0_Out_R_d0),
    .Out_R_address1(fft_stage_6_U0_Out_R_address1),
    .Out_R_ce1(fft_stage_6_U0_Out_R_ce1),
    .Out_R_we1(fft_stage_6_U0_Out_R_we1),
    .Out_R_d1(fft_stage_6_U0_Out_R_d1),
    .Out_I_address0(fft_stage_6_U0_Out_I_address0),
    .Out_I_ce0(fft_stage_6_U0_Out_I_ce0),
    .Out_I_we0(fft_stage_6_U0_Out_I_we0),
    .Out_I_d0(fft_stage_6_U0_Out_I_d0),
    .Out_I_address1(fft_stage_6_U0_Out_I_address1),
    .Out_I_ce1(fft_stage_6_U0_Out_I_ce1),
    .Out_I_we1(fft_stage_6_U0_Out_I_we1),
    .Out_I_d1(fft_stage_6_U0_Out_I_d1)
);

fft_streaming_fft_stage_7 fft_stage_7_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_7_U0_ap_start),
    .ap_done(fft_stage_7_U0_ap_done),
    .ap_continue(fft_stage_7_U0_ap_continue),
    .ap_idle(fft_stage_7_U0_ap_idle),
    .ap_ready(fft_stage_7_U0_ap_ready),
    .X_R_address0(fft_stage_7_U0_X_R_address0),
    .X_R_ce0(fft_stage_7_U0_X_R_ce0),
    .X_R_q0(Stage_R_7_t_q0),
    .X_R_address1(fft_stage_7_U0_X_R_address1),
    .X_R_ce1(fft_stage_7_U0_X_R_ce1),
    .X_R_q1(Stage_R_7_t_q1),
    .X_I_address0(fft_stage_7_U0_X_I_address0),
    .X_I_ce0(fft_stage_7_U0_X_I_ce0),
    .X_I_q0(Stage_I_7_t_q0),
    .X_I_address1(fft_stage_7_U0_X_I_address1),
    .X_I_ce1(fft_stage_7_U0_X_I_ce1),
    .X_I_q1(Stage_I_7_t_q1),
    .Out_R_address0(fft_stage_7_U0_Out_R_address0),
    .Out_R_ce0(fft_stage_7_U0_Out_R_ce0),
    .Out_R_we0(fft_stage_7_U0_Out_R_we0),
    .Out_R_d0(fft_stage_7_U0_Out_R_d0),
    .Out_R_address1(fft_stage_7_U0_Out_R_address1),
    .Out_R_ce1(fft_stage_7_U0_Out_R_ce1),
    .Out_R_we1(fft_stage_7_U0_Out_R_we1),
    .Out_R_d1(fft_stage_7_U0_Out_R_d1),
    .Out_I_address0(fft_stage_7_U0_Out_I_address0),
    .Out_I_ce0(fft_stage_7_U0_Out_I_ce0),
    .Out_I_we0(fft_stage_7_U0_Out_I_we0),
    .Out_I_d0(fft_stage_7_U0_Out_I_d0),
    .Out_I_address1(fft_stage_7_U0_Out_I_address1),
    .Out_I_ce1(fft_stage_7_U0_Out_I_ce1),
    .Out_I_we1(fft_stage_7_U0_Out_I_we1),
    .Out_I_d1(fft_stage_7_U0_Out_I_d1)
);

fft_streaming_fft_stage_8 fft_stage_8_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_8_U0_ap_start),
    .ap_done(fft_stage_8_U0_ap_done),
    .ap_continue(fft_stage_8_U0_ap_continue),
    .ap_idle(fft_stage_8_U0_ap_idle),
    .ap_ready(fft_stage_8_U0_ap_ready),
    .X_R_address0(fft_stage_8_U0_X_R_address0),
    .X_R_ce0(fft_stage_8_U0_X_R_ce0),
    .X_R_q0(Stage_R_8_t_q0),
    .X_R_address1(fft_stage_8_U0_X_R_address1),
    .X_R_ce1(fft_stage_8_U0_X_R_ce1),
    .X_R_q1(Stage_R_8_t_q1),
    .X_I_address0(fft_stage_8_U0_X_I_address0),
    .X_I_ce0(fft_stage_8_U0_X_I_ce0),
    .X_I_q0(Stage_I_8_t_q0),
    .X_I_address1(fft_stage_8_U0_X_I_address1),
    .X_I_ce1(fft_stage_8_U0_X_I_ce1),
    .X_I_q1(Stage_I_8_t_q1),
    .Out_R_address0(fft_stage_8_U0_Out_R_address0),
    .Out_R_ce0(fft_stage_8_U0_Out_R_ce0),
    .Out_R_we0(fft_stage_8_U0_Out_R_we0),
    .Out_R_d0(fft_stage_8_U0_Out_R_d0),
    .Out_R_address1(fft_stage_8_U0_Out_R_address1),
    .Out_R_ce1(fft_stage_8_U0_Out_R_ce1),
    .Out_R_we1(fft_stage_8_U0_Out_R_we1),
    .Out_R_d1(fft_stage_8_U0_Out_R_d1),
    .Out_I_address0(fft_stage_8_U0_Out_I_address0),
    .Out_I_ce0(fft_stage_8_U0_Out_I_ce0),
    .Out_I_we0(fft_stage_8_U0_Out_I_we0),
    .Out_I_d0(fft_stage_8_U0_Out_I_d0),
    .Out_I_address1(fft_stage_8_U0_Out_I_address1),
    .Out_I_ce1(fft_stage_8_U0_Out_I_ce1),
    .Out_I_we1(fft_stage_8_U0_Out_I_we1),
    .Out_I_d1(fft_stage_8_U0_Out_I_d1)
);

fft_streaming_fft_stage_9 fft_stage_9_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_stage_9_U0_ap_start),
    .ap_done(fft_stage_9_U0_ap_done),
    .ap_continue(fft_stage_9_U0_ap_continue),
    .ap_idle(fft_stage_9_U0_ap_idle),
    .ap_ready(fft_stage_9_U0_ap_ready),
    .X_R_address0(fft_stage_9_U0_X_R_address0),
    .X_R_ce0(fft_stage_9_U0_X_R_ce0),
    .X_R_q0(Stage_R_9_t_q0),
    .X_R_address1(fft_stage_9_U0_X_R_address1),
    .X_R_ce1(fft_stage_9_U0_X_R_ce1),
    .X_R_q1(Stage_R_9_t_q1),
    .X_I_address0(fft_stage_9_U0_X_I_address0),
    .X_I_ce0(fft_stage_9_U0_X_I_ce0),
    .X_I_q0(Stage_I_9_t_q0),
    .X_I_address1(fft_stage_9_U0_X_I_address1),
    .X_I_ce1(fft_stage_9_U0_X_I_ce1),
    .X_I_q1(Stage_I_9_t_q1),
    .OUT_R_address0(fft_stage_9_U0_OUT_R_address0),
    .OUT_R_ce0(fft_stage_9_U0_OUT_R_ce0),
    .OUT_R_we0(fft_stage_9_U0_OUT_R_we0),
    .OUT_R_d0(fft_stage_9_U0_OUT_R_d0),
    .OUT_R_address1(fft_stage_9_U0_OUT_R_address1),
    .OUT_R_ce1(fft_stage_9_U0_OUT_R_ce1),
    .OUT_R_we1(fft_stage_9_U0_OUT_R_we1),
    .OUT_R_d1(fft_stage_9_U0_OUT_R_d1),
    .OUT_I_address0(fft_stage_9_U0_OUT_I_address0),
    .OUT_I_ce0(fft_stage_9_U0_OUT_I_ce0),
    .OUT_I_we0(fft_stage_9_U0_OUT_I_we0),
    .OUT_I_d0(fft_stage_9_U0_OUT_I_d0),
    .OUT_I_address1(fft_stage_9_U0_OUT_I_address1),
    .OUT_I_ce1(fft_stage_9_U0_OUT_I_ce1),
    .OUT_I_we1(fft_stage_9_U0_OUT_I_we1),
    .OUT_I_d1(fft_stage_9_U0_OUT_I_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_I <= 1'b0;
    end else begin
        if (((bit_reverse_U0_ap_done & bit_reverse_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_I <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_I <= ap_sync_channel_write_Stage_I;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_I_1 <= 1'b0;
    end else begin
        if (((fft_stage_U0_ap_done & fft_stage_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_I_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_I_1 <= ap_sync_channel_write_Stage_I_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_I_2 <= 1'b0;
    end else begin
        if (((fft_stage_1_U0_ap_done & fft_stage_1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_I_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_I_2 <= ap_sync_channel_write_Stage_I_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_I_3 <= 1'b0;
    end else begin
        if (((fft_stage_2_U0_ap_done & fft_stage_2_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_I_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_I_3 <= ap_sync_channel_write_Stage_I_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_I_4 <= 1'b0;
    end else begin
        if (((fft_stage_3_U0_ap_done & fft_stage_3_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_I_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_I_4 <= ap_sync_channel_write_Stage_I_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_I_5 <= 1'b0;
    end else begin
        if (((fft_stage_4_U0_ap_done & fft_stage_4_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_I_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_I_5 <= ap_sync_channel_write_Stage_I_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_I_6 <= 1'b0;
    end else begin
        if (((fft_stage_5_U0_ap_done & fft_stage_5_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_I_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_I_6 <= ap_sync_channel_write_Stage_I_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_I_7 <= 1'b0;
    end else begin
        if (((fft_stage_6_U0_ap_done & fft_stage_6_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_I_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_I_7 <= ap_sync_channel_write_Stage_I_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_I_8 <= 1'b0;
    end else begin
        if (((fft_stage_7_U0_ap_done & fft_stage_7_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_I_8 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_I_8 <= ap_sync_channel_write_Stage_I_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_I_9 <= 1'b0;
    end else begin
        if (((fft_stage_8_U0_ap_done & fft_stage_8_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_I_9 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_I_9 <= ap_sync_channel_write_Stage_I_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_R <= 1'b0;
    end else begin
        if (((bit_reverse_U0_ap_done & bit_reverse_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_R <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_R <= ap_sync_channel_write_Stage_R;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_R_1 <= 1'b0;
    end else begin
        if (((fft_stage_U0_ap_done & fft_stage_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_R_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_R_1 <= ap_sync_channel_write_Stage_R_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_R_2 <= 1'b0;
    end else begin
        if (((fft_stage_1_U0_ap_done & fft_stage_1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_R_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_R_2 <= ap_sync_channel_write_Stage_R_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_R_3 <= 1'b0;
    end else begin
        if (((fft_stage_2_U0_ap_done & fft_stage_2_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_R_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_R_3 <= ap_sync_channel_write_Stage_R_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_R_4 <= 1'b0;
    end else begin
        if (((fft_stage_3_U0_ap_done & fft_stage_3_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_R_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_R_4 <= ap_sync_channel_write_Stage_R_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_R_5 <= 1'b0;
    end else begin
        if (((fft_stage_4_U0_ap_done & fft_stage_4_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_R_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_R_5 <= ap_sync_channel_write_Stage_R_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_R_6 <= 1'b0;
    end else begin
        if (((fft_stage_5_U0_ap_done & fft_stage_5_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_R_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_R_6 <= ap_sync_channel_write_Stage_R_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_R_7 <= 1'b0;
    end else begin
        if (((fft_stage_6_U0_ap_done & fft_stage_6_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_R_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_R_7 <= ap_sync_channel_write_Stage_R_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_R_8 <= 1'b0;
    end else begin
        if (((fft_stage_7_U0_ap_done & fft_stage_7_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_R_8 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_R_8 <= ap_sync_channel_write_Stage_R_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage_R_9 <= 1'b0;
    end else begin
        if (((fft_stage_8_U0_ap_done & fft_stage_8_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_Stage_R_9 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage_R_9 <= ap_sync_channel_write_Stage_R_9;
        end
    end
end

assign OUT_I_address0 = fft_stage_9_U0_OUT_I_address0;

assign OUT_I_address1 = fft_stage_9_U0_OUT_I_address1;

assign OUT_I_ce0 = fft_stage_9_U0_OUT_I_ce0;

assign OUT_I_ce1 = fft_stage_9_U0_OUT_I_ce1;

assign OUT_I_d0 = fft_stage_9_U0_OUT_I_d0;

assign OUT_I_d1 = fft_stage_9_U0_OUT_I_d1;

assign OUT_I_we0 = fft_stage_9_U0_OUT_I_we0;

assign OUT_I_we1 = fft_stage_9_U0_OUT_I_we1;

assign OUT_R_address0 = fft_stage_9_U0_OUT_R_address0;

assign OUT_R_address1 = fft_stage_9_U0_OUT_R_address1;

assign OUT_R_ce0 = fft_stage_9_U0_OUT_R_ce0;

assign OUT_R_ce1 = fft_stage_9_U0_OUT_R_ce1;

assign OUT_R_d0 = fft_stage_9_U0_OUT_R_d0;

assign OUT_R_d1 = fft_stage_9_U0_OUT_R_d1;

assign OUT_R_we0 = fft_stage_9_U0_OUT_R_we0;

assign OUT_R_we1 = fft_stage_9_U0_OUT_R_we1;

assign X_I_address0 = bit_reverse_U0_X_I_address0;

assign X_I_address1 = bit_reverse_U0_X_I_address1;

assign X_I_ce0 = bit_reverse_U0_X_I_ce0;

assign X_I_ce1 = bit_reverse_U0_X_I_ce1;

assign X_I_d0 = 32'd0;

assign X_I_d1 = 32'd0;

assign X_I_we0 = 1'b0;

assign X_I_we1 = 1'b0;

assign X_R_address0 = bit_reverse_U0_X_R_address0;

assign X_R_address1 = bit_reverse_U0_X_R_address1;

assign X_R_ce0 = bit_reverse_U0_X_R_ce0;

assign X_R_ce1 = bit_reverse_U0_X_R_ce1;

assign X_R_d0 = 32'd0;

assign X_R_d1 = 32'd0;

assign X_R_we0 = 1'b0;

assign X_R_we1 = 1'b0;

assign ap_channel_done_Stage_I = ((ap_sync_reg_channel_write_Stage_I ^ 1'b1) & bit_reverse_U0_ap_done);

assign ap_channel_done_Stage_I_1 = (fft_stage_U0_ap_done & (ap_sync_reg_channel_write_Stage_I_1 ^ 1'b1));

assign ap_channel_done_Stage_I_2 = (fft_stage_1_U0_ap_done & (ap_sync_reg_channel_write_Stage_I_2 ^ 1'b1));

assign ap_channel_done_Stage_I_3 = (fft_stage_2_U0_ap_done & (ap_sync_reg_channel_write_Stage_I_3 ^ 1'b1));

assign ap_channel_done_Stage_I_4 = (fft_stage_3_U0_ap_done & (ap_sync_reg_channel_write_Stage_I_4 ^ 1'b1));

assign ap_channel_done_Stage_I_5 = (fft_stage_4_U0_ap_done & (ap_sync_reg_channel_write_Stage_I_5 ^ 1'b1));

assign ap_channel_done_Stage_I_6 = (fft_stage_5_U0_ap_done & (ap_sync_reg_channel_write_Stage_I_6 ^ 1'b1));

assign ap_channel_done_Stage_I_7 = (fft_stage_6_U0_ap_done & (ap_sync_reg_channel_write_Stage_I_7 ^ 1'b1));

assign ap_channel_done_Stage_I_8 = (fft_stage_7_U0_ap_done & (ap_sync_reg_channel_write_Stage_I_8 ^ 1'b1));

assign ap_channel_done_Stage_I_9 = (fft_stage_8_U0_ap_done & (ap_sync_reg_channel_write_Stage_I_9 ^ 1'b1));

assign ap_channel_done_Stage_R = ((ap_sync_reg_channel_write_Stage_R ^ 1'b1) & bit_reverse_U0_ap_done);

assign ap_channel_done_Stage_R_1 = (fft_stage_U0_ap_done & (ap_sync_reg_channel_write_Stage_R_1 ^ 1'b1));

assign ap_channel_done_Stage_R_2 = (fft_stage_1_U0_ap_done & (ap_sync_reg_channel_write_Stage_R_2 ^ 1'b1));

assign ap_channel_done_Stage_R_3 = (fft_stage_2_U0_ap_done & (ap_sync_reg_channel_write_Stage_R_3 ^ 1'b1));

assign ap_channel_done_Stage_R_4 = (fft_stage_3_U0_ap_done & (ap_sync_reg_channel_write_Stage_R_4 ^ 1'b1));

assign ap_channel_done_Stage_R_5 = (fft_stage_4_U0_ap_done & (ap_sync_reg_channel_write_Stage_R_5 ^ 1'b1));

assign ap_channel_done_Stage_R_6 = (fft_stage_5_U0_ap_done & (ap_sync_reg_channel_write_Stage_R_6 ^ 1'b1));

assign ap_channel_done_Stage_R_7 = (fft_stage_6_U0_ap_done & (ap_sync_reg_channel_write_Stage_R_7 ^ 1'b1));

assign ap_channel_done_Stage_R_8 = (fft_stage_7_U0_ap_done & (ap_sync_reg_channel_write_Stage_R_8 ^ 1'b1));

assign ap_channel_done_Stage_R_9 = (fft_stage_8_U0_ap_done & (ap_sync_reg_channel_write_Stage_R_9 ^ 1'b1));

assign ap_done = fft_stage_9_U0_ap_done;

assign ap_idle = (fft_stage_U0_ap_idle & fft_stage_9_U0_ap_idle & fft_stage_8_U0_ap_idle & fft_stage_7_U0_ap_idle & fft_stage_6_U0_ap_idle & fft_stage_5_U0_ap_idle & fft_stage_4_U0_ap_idle & fft_stage_3_U0_ap_idle & fft_stage_2_U0_ap_idle & fft_stage_1_U0_ap_idle & (1'b1 ^ Stage_I_9_t_empty_n) & (1'b1 ^ Stage_R_9_t_empty_n) & (1'b1 ^ Stage_I_8_t_empty_n) & (1'b1 ^ Stage_R_8_t_empty_n) & (1'b1 ^ Stage_I_7_t_empty_n) & (1'b1 ^ Stage_R_7_t_empty_n) & (1'b1 ^ Stage_I_6_t_empty_n) & (1'b1 ^ Stage_R_6_t_empty_n) & (1'b1 ^ Stage_I_5_t_empty_n) & (1'b1 ^ Stage_R_5_t_empty_n) & (1'b1 ^ Stage_I_4_t_empty_n) & (1'b1 ^ Stage_R_4_t_empty_n) & (1'b1 ^ Stage_I_3_t_empty_n) & (1'b1 ^ Stage_R_3_t_empty_n) & (1'b1 ^ Stage_I_2_t_empty_n) & (1'b1 ^ Stage_R_2_t_empty_n) & (1'b1 ^ Stage_I_1_t_empty_n) & (1'b1 ^ Stage_R_1_t_empty_n) & (1'b1 ^ Stage_I_t_empty_n) & (1'b1 ^ Stage_R_t_empty_n) & bit_reverse_U0_ap_idle);

assign ap_ready = bit_reverse_U0_ap_ready;

assign ap_sync_channel_write_Stage_I = ((bit_reverse_U0_OUT_I_full_n & ap_channel_done_Stage_I) | ap_sync_reg_channel_write_Stage_I);

assign ap_sync_channel_write_Stage_I_1 = ((fft_stage_U0_Out_I_full_n & ap_channel_done_Stage_I_1) | ap_sync_reg_channel_write_Stage_I_1);

assign ap_sync_channel_write_Stage_I_2 = ((fft_stage_1_U0_Out_I_full_n & ap_channel_done_Stage_I_2) | ap_sync_reg_channel_write_Stage_I_2);

assign ap_sync_channel_write_Stage_I_3 = ((fft_stage_2_U0_Out_I_full_n & ap_channel_done_Stage_I_3) | ap_sync_reg_channel_write_Stage_I_3);

assign ap_sync_channel_write_Stage_I_4 = ((fft_stage_3_U0_Out_I_full_n & ap_channel_done_Stage_I_4) | ap_sync_reg_channel_write_Stage_I_4);

assign ap_sync_channel_write_Stage_I_5 = ((fft_stage_4_U0_Out_I_full_n & ap_channel_done_Stage_I_5) | ap_sync_reg_channel_write_Stage_I_5);

assign ap_sync_channel_write_Stage_I_6 = ((fft_stage_5_U0_Out_I_full_n & ap_channel_done_Stage_I_6) | ap_sync_reg_channel_write_Stage_I_6);

assign ap_sync_channel_write_Stage_I_7 = ((fft_stage_6_U0_Out_I_full_n & ap_channel_done_Stage_I_7) | ap_sync_reg_channel_write_Stage_I_7);

assign ap_sync_channel_write_Stage_I_8 = ((fft_stage_7_U0_Out_I_full_n & ap_channel_done_Stage_I_8) | ap_sync_reg_channel_write_Stage_I_8);

assign ap_sync_channel_write_Stage_I_9 = ((fft_stage_8_U0_Out_I_full_n & ap_channel_done_Stage_I_9) | ap_sync_reg_channel_write_Stage_I_9);

assign ap_sync_channel_write_Stage_R = ((bit_reverse_U0_OUT_R_full_n & ap_channel_done_Stage_R) | ap_sync_reg_channel_write_Stage_R);

assign ap_sync_channel_write_Stage_R_1 = ((fft_stage_U0_Out_R_full_n & ap_channel_done_Stage_R_1) | ap_sync_reg_channel_write_Stage_R_1);

assign ap_sync_channel_write_Stage_R_2 = ((fft_stage_1_U0_Out_R_full_n & ap_channel_done_Stage_R_2) | ap_sync_reg_channel_write_Stage_R_2);

assign ap_sync_channel_write_Stage_R_3 = ((fft_stage_2_U0_Out_R_full_n & ap_channel_done_Stage_R_3) | ap_sync_reg_channel_write_Stage_R_3);

assign ap_sync_channel_write_Stage_R_4 = ((fft_stage_3_U0_Out_R_full_n & ap_channel_done_Stage_R_4) | ap_sync_reg_channel_write_Stage_R_4);

assign ap_sync_channel_write_Stage_R_5 = ((fft_stage_4_U0_Out_R_full_n & ap_channel_done_Stage_R_5) | ap_sync_reg_channel_write_Stage_R_5);

assign ap_sync_channel_write_Stage_R_6 = ((fft_stage_5_U0_Out_R_full_n & ap_channel_done_Stage_R_6) | ap_sync_reg_channel_write_Stage_R_6);

assign ap_sync_channel_write_Stage_R_7 = ((fft_stage_6_U0_Out_R_full_n & ap_channel_done_Stage_R_7) | ap_sync_reg_channel_write_Stage_R_7);

assign ap_sync_channel_write_Stage_R_8 = ((fft_stage_7_U0_Out_R_full_n & ap_channel_done_Stage_R_8) | ap_sync_reg_channel_write_Stage_R_8);

assign ap_sync_channel_write_Stage_R_9 = ((fft_stage_8_U0_Out_R_full_n & ap_channel_done_Stage_R_9) | ap_sync_reg_channel_write_Stage_R_9);

assign bit_reverse_U0_OUT_I_full_n = Stage_I_i_full_n;

assign bit_reverse_U0_OUT_R_full_n = Stage_R_i_full_n;

assign bit_reverse_U0_ap_continue = (ap_sync_channel_write_Stage_R & ap_sync_channel_write_Stage_I);

assign bit_reverse_U0_ap_start = ap_start;

assign fft_stage_1_U0_Out_I_full_n = Stage_I_2_i_full_n;

assign fft_stage_1_U0_Out_R_full_n = Stage_R_2_i_full_n;

assign fft_stage_1_U0_ap_continue = (ap_sync_channel_write_Stage_R_2 & ap_sync_channel_write_Stage_I_2);

assign fft_stage_1_U0_ap_start = (Stage_R_1_t_empty_n & Stage_I_1_t_empty_n);

assign fft_stage_2_U0_Out_I_full_n = Stage_I_3_i_full_n;

assign fft_stage_2_U0_Out_R_full_n = Stage_R_3_i_full_n;

assign fft_stage_2_U0_ap_continue = (ap_sync_channel_write_Stage_R_3 & ap_sync_channel_write_Stage_I_3);

assign fft_stage_2_U0_ap_start = (Stage_R_2_t_empty_n & Stage_I_2_t_empty_n);

assign fft_stage_3_U0_Out_I_full_n = Stage_I_4_i_full_n;

assign fft_stage_3_U0_Out_R_full_n = Stage_R_4_i_full_n;

assign fft_stage_3_U0_ap_continue = (ap_sync_channel_write_Stage_R_4 & ap_sync_channel_write_Stage_I_4);

assign fft_stage_3_U0_ap_start = (Stage_R_3_t_empty_n & Stage_I_3_t_empty_n);

assign fft_stage_4_U0_Out_I_full_n = Stage_I_5_i_full_n;

assign fft_stage_4_U0_Out_R_full_n = Stage_R_5_i_full_n;

assign fft_stage_4_U0_ap_continue = (ap_sync_channel_write_Stage_R_5 & ap_sync_channel_write_Stage_I_5);

assign fft_stage_4_U0_ap_start = (Stage_R_4_t_empty_n & Stage_I_4_t_empty_n);

assign fft_stage_5_U0_Out_I_full_n = Stage_I_6_i_full_n;

assign fft_stage_5_U0_Out_R_full_n = Stage_R_6_i_full_n;

assign fft_stage_5_U0_ap_continue = (ap_sync_channel_write_Stage_R_6 & ap_sync_channel_write_Stage_I_6);

assign fft_stage_5_U0_ap_start = (Stage_R_5_t_empty_n & Stage_I_5_t_empty_n);

assign fft_stage_6_U0_Out_I_full_n = Stage_I_7_i_full_n;

assign fft_stage_6_U0_Out_R_full_n = Stage_R_7_i_full_n;

assign fft_stage_6_U0_ap_continue = (ap_sync_channel_write_Stage_R_7 & ap_sync_channel_write_Stage_I_7);

assign fft_stage_6_U0_ap_start = (Stage_R_6_t_empty_n & Stage_I_6_t_empty_n);

assign fft_stage_7_U0_Out_I_full_n = Stage_I_8_i_full_n;

assign fft_stage_7_U0_Out_R_full_n = Stage_R_8_i_full_n;

assign fft_stage_7_U0_ap_continue = (ap_sync_channel_write_Stage_R_8 & ap_sync_channel_write_Stage_I_8);

assign fft_stage_7_U0_ap_start = (Stage_R_7_t_empty_n & Stage_I_7_t_empty_n);

assign fft_stage_8_U0_Out_I_full_n = Stage_I_9_i_full_n;

assign fft_stage_8_U0_Out_R_full_n = Stage_R_9_i_full_n;

assign fft_stage_8_U0_ap_continue = (ap_sync_channel_write_Stage_R_9 & ap_sync_channel_write_Stage_I_9);

assign fft_stage_8_U0_ap_start = (Stage_R_8_t_empty_n & Stage_I_8_t_empty_n);

assign fft_stage_9_U0_ap_continue = 1'b1;

assign fft_stage_9_U0_ap_start = (Stage_R_9_t_empty_n & Stage_I_9_t_empty_n);

assign fft_stage_U0_Out_I_full_n = Stage_I_1_i_full_n;

assign fft_stage_U0_Out_R_full_n = Stage_R_1_i_full_n;

assign fft_stage_U0_ap_continue = (ap_sync_channel_write_Stage_R_1 & ap_sync_channel_write_Stage_I_1);

assign fft_stage_U0_ap_start = (Stage_R_t_empty_n & Stage_I_t_empty_n);

endmodule //fft_streaming
